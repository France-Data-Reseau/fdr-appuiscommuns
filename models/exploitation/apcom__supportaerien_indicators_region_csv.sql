{#
version csv-isable :
- geojson-ize geo fields (TODO convert sr if required)
- json-ize SQL arrays
- text-ify everything else
#}


{%- set source = 'appuiscommuns__supportaerien_indicators_region' -%}
{%- set cols = adapter.get_columns_in_relation(ref(source)) | list -%}

select
    {% for col in cols %}
        {% if modules.re.match("$geo.*", col.name) %}
          ST_AsGeoJSON({{ source }}.{{ adapter.quote(col.name) }}) as {{ adapter.quote(col.name) }}
        {% elif col.data_type == 'ARRAY' %}
          array_to_json({{ source }}.{{ adapter.quote(col.name) }}) as {{ adapter.quote(col.name) }}
        {% elif col.is_string() or col.is_numeric() %}
          {{ source }}.{{ adapter.quote(col.name) }}
        {% else %}
          {{ source }}.{{ adapter.quote(col.name) }}::text
        {% endif %}
        {% if not loop.last %},{% endif %}
        --{{ col.data_type }}ST_AsGeoJSON
    {% endfor %}
    --, '{ "a":1, "b":"zz" }'::json as test
    from {{ ref(source) }}