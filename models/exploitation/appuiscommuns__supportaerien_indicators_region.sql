{#
Example d'exploitation - calcul d'indicateurs agrégés classiques, par commune :
- min et max, de numeric
- ensemble des valeurs rencontrées (dans une commune donc), pour une valeur de dictionnaire
#}

{% set containerUrl = 'http://' + 'datalake.francedatareseau.fr' %}
{% set typeUrlPrefix = containerUrl + '/dc/type/' %}
{% set type = 'eaupotable_canalisation' %} -- _2021 ? from this file ? prefix:typeName ?
{% set typeInd = 'eaupotable_canalisation__indicators' %}
{% set typeName = 'Canalisation' %}
{% set typeNameInd = 'CanalisationIndicator' %}
{% set prefix = 'appuiscommunssupp' %} -- ?
{% set prefixInd = 'appuiscommunssuppind' %} -- ?
{#% set fieldPrefix = prefix + ':' %#}
{% set fieldPrefix = prefix + '__' %}
{#% set fieldPrefixInd = prefixInd + '__' %#}
{% set fieldPrefixInd = prefixInd + '__' %}
{% set idUrlPrefix = typeUrlPrefix + type + '/' %}

select
    count(*) as "{{ fieldPrefixInd }}count",
    "reg_code",
    MIN("reg_name") as reg_name,
    array_agg(distinct "{{ fieldPrefix }}TypePhysique") as "{{ fieldPrefixInd }}TypePhysique__set",
    {{ dbt_utils.pivot('"' + fieldPrefix + 'TypePhysique"', dbt_utils.get_column_values(ref('appuiscommuns_supportaerien_enriched'),
        '"' + fieldPrefix + 'TypePhysique"'), prefix='fieldPrefix' + 'TypePhysique__') }},
    array_agg(distinct "{{ fieldPrefix }}Nature") as "{{ fieldPrefixInd }}Nature__set",
    {{ dbt_utils.pivot('"' + fieldPrefix + 'Nature"', dbt_utils.get_column_values(ref('appuiscommuns_supportaerien_enriched'),
        '"' + fieldPrefix + 'Nature"'), prefix='fieldPrefix' + 'Nature__') }},
    array_agg(distinct "{{ fieldPrefix }}Gestionnaire") as "{{ fieldPrefixInd }}Gestionnaire__set",
    {{ dbt_utils.pivot('"' + fieldPrefix + 'Gestionnaire"', dbt_utils.get_column_values(ref('appuiscommuns_supportaerien_enriched'),
        '"' + fieldPrefix + 'Gestionnaire"'), prefix='fieldPrefix' + 'Gestionnaire__') }},
    array_agg(distinct "{{ fieldPrefix }}Materiau") as "{{ fieldPrefixInd }}Materiau__set", -- TODO distinct
    {{ dbt_utils.pivot('"' + fieldPrefix + 'Materiau"', dbt_utils.get_column_values(ref('appuiscommuns_supportaerien_enriched'),
        '"' + fieldPrefix + 'Materiau"'), prefix='fieldPrefix' + 'Materiau__') }},
    MIN("{{ fieldPrefix }}HauteurAppui") as "{{ fieldPrefixInd }}HauteurAppui__min",
    MAX("{{ fieldPrefix }}HauteurAppui") as "{{ fieldPrefixInd }}HauteurAppui__max",
    AVG("{{ fieldPrefix }}HauteurAppui") as "{{ fieldPrefixInd }}HauteurAppui__avg"
    
    from {{ ref('appuiscommuns_supportaerien_enriched') }}
    group by "reg_code"